/* BEGIN AREA CastleGFKitchen
      _________________________     
     |\                       /|    
     | \        ,---,        / |    
     |  \________\=/________/  |    
     |  | ,____,     ,____, |  |    
     |  | |_oOo|     |]]\_| |  |    
     |  | |b_/_|     |_oOO| |  |    
     |  |                   |  |    
     |  | ,--,         ,O,  |  |    
     |  | |==|         '"'  |  |    
     |  |                   |  |    
     |  |___________________|  |    
     |  /        / \        \  |    
     | /        '---'        \ |    
     |/_______________________\|    
                                    
####################################
####################################
##################b#################
##################i#################
#########...................########
#########.######.....######.########
#########.######.....######.########
#########...................########
#########.####..........j...########
#########.####....s.........########
#########...................########
#########...................########
##################.#################
##################a#################
####################################
####################################
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmkkkmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmkkkmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
a:CastleGFDiningR
b:CastleGFKeyRoom
*/

#include "../src/areasHelper.hpp"

struct AreaData{
    bool switchHit = false;
    bool doorClosed = true;
} thisAreaSaveData;

void onEnter(char sym){
    unsigned char color = C_LIGHT_MAGENTA;
    for(int i=0;i<activeArea->poiCount;i++){
        Poi poi = activeArea->pois[i];
        if(poi.sym == 'i'){
            activeArea->entities.push_back(new Lock(poi.pos, false, thisAreaSaveData.doorClosed, LockDraw(color, '='), LockDraw(color, '_')));
        }else if(poi.sym == 'j'){
            activeArea->entities.push_back(new HitSwitch(poi.pos, thisAreaSaveData.switchHit, SWITCH_TYPE_TOGGLE, ColorSym(C_DARK_BLUE, 'o'), ColorSym(C_LIGHT_BLUE, 'O')));
        }else if(poi.sym == 's'){
            activeArea->entities.push_back(new Slime(AREA_X(poi.pos), AREA_Y(poi.pos)));
        }
    }
}

void onUpdate(){
    thisAreaSaveData.doorClosed = !thisAreaSaveData.switchHit;
}